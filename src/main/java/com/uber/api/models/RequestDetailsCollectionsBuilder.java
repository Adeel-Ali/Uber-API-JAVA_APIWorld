/*
 * UberAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 09/13/2016
 */
package com.uber.api.models;

import java.util.*;

public class RequestDetailsCollectionsBuilder {
    //the instance to build
    private RequestDetailsCollections requestDetailsCollections;

    /**
     * Default constructor to initialize the instance
     */
    public RequestDetailsCollectionsBuilder() {
        requestDetailsCollections = new RequestDetailsCollections();
    }

    /**
     * The object that contains driver details.
     */
    public RequestDetailsCollectionsBuilder driver(Driver driver) {
        requestDetailsCollections.setDriver(driver);
        return this;
    }

    /**
     * The estimated time of vehicle arrival in minutes.
     */
    public RequestDetailsCollectionsBuilder eta(int eta) {
        requestDetailsCollections.setEta(eta);
        return this;
    }

    /**
     * The object that contains the location information of the vehicle and driver.
     */
    public RequestDetailsCollectionsBuilder location(Location location) {
        requestDetailsCollections.setLocation(location);
        return this;
    }

    /**
     * The unique ID of the Request.
     */
    public RequestDetailsCollectionsBuilder requestId(String requestId) {
        requestDetailsCollections.setRequestId(requestId);
        return this;
    }

    /**
     * The status of the Request indicating state.
     */
    public RequestDetailsCollectionsBuilder status(String status) {
        requestDetailsCollections.setStatus(status);
        return this;
    }

    /**
     * The surge pricing multiplier used to calculate the increased price of a Request. A multiplier of 1.0 means surge pricing is not in effect.
     */
    public RequestDetailsCollectionsBuilder surgeMultiplier(double surgeMultiplier) {
        requestDetailsCollections.setSurgeMultiplier(surgeMultiplier);
        return this;
    }

    /**
     * The object that contains vehicle details.
     */
    public RequestDetailsCollectionsBuilder vehicle(Vehicle vehicle) {
        requestDetailsCollections.setVehicle(vehicle);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public RequestDetailsCollections build() {
        return requestDetailsCollections;
    }
}